package com.eeit109team6.memberDao;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class MemberDaoJdbcImpl implements IMemberDao {

	@Override
	public void add(Member m,Connection conn) throws SQLException {
		String sqlcode = "insert into member(account,password,username,idnumber,sex,birth,registeredtime,isactive) values(?,?,?,?,?,?,?,?)";
		PreparedStatement state = conn.prepareStatement(sqlcode);
		state.setString(1, m.getAccount());
		state.setString(2, m.getPassword());
		state.setString(3, m.getUsername());
		state.setString(4, m.getIdnumber());
		state.setString(5, m.getSex());
		state.setString(6, m.getBirth());
		state.setString(7, m.getRegisteredtime());
		state.setInt(8, m.getIsactive());
		int i = state.executeUpdate();
		
		
		
//		state.getGeneratedKeys()
		System.out.println("insert id = "+state.getGeneratedKeys());
		state.close();

//		private String account ;
//		private String password ;
//		private String username ;
//		private String idnumber ;
//		private String sex ;
//		private String birth ;
//		private String registeredtime ;
		
	}

	@Override
	public void update(Member m,Connection conn) throws SQLException {
		String sqlcode = "update member set  account = ?,password = ?,username = ?,idnumber = ?,sex = ?,birth = ? where member_id = ? ";
		PreparedStatement state = conn.prepareStatement(sqlcode);
		state.setString(1, m.getAccount());
		state.setString(2, m.getPassword());
		state.setString(3, m.getUsername());
		state.setString(4, m.getIdnumber());
		state.setString(5, m.getSex());
		state.setString(6, m.getBirth());
		state.setInt(7,m.getMember_id());
		state.executeUpdate();
		state.close();
	}

	@Override
	public void delete(Member m,Connection conn) throws SQLException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public ArrayList<Member> fintAll(Connection conn) throws SQLException {
		ArrayList<Member> memberList = new ArrayList<Member>();
//		List<String> memberColName = new ArrayList<String>();
		String sqlcode = "select * from member ";
		PreparedStatement state = conn.prepareStatement(sqlcode);
		ResultSet rs = state.executeQuery();
//		ResultSetMetaData metadata = rs.getMetaData();
//		for (int i = 0 ;i< metadata.getColumnCount() ;i++) {
//			memberColName.add(metadata.getColumnName(i));
//		}
		while (rs.next()) {
			Member m = new Member();
			m.setMember_id(rs.getInt("member_id"));
			m.setAccount(rs.getString("account"));
			m.setPassword(rs.getString("password"));
			m.setUsername(rs.getString("username"));
			m.setIdnumber(rs.getString("idnumber"));
			m.setSex(rs.getString("sex"));
			m.setBirth(rs.getString("birth"));
			m.setRegisteredtime(rs.getString("registeredtime"));
			memberList.add(m);

//			private int member_id;
//			private String account ;
//			private String password ;
//			private String username ;
//			private String idnumber ;
//			private String sex ;
//			private String birth ;
//			private String registeredtime ;
			
			
//			state.setString(1, m.getAccount());
//			state.setString(2, m.getPassword());
//			state.setString(3, m.getUsername());
//			state.setString(4, m.getIdnumber());
//			state.setString(5, m.getSex());
//			state.setString(6, m.getBirth());
//			state.setString(7, m.getRegisteredtime());
			
		}
		rs.close();
		state.close();
		return   memberList;
	}

	@Override
	public Member fintById(Member m,Connection conn) throws SQLException {
		String sqlcode = "select * from member where member_id = ?";
		PreparedStatement state = conn.prepareStatement(sqlcode);
		state.setInt(1, m.getMember_id());
		ResultSet rs = state.executeQuery();
		if(rs.next()) {

		}
		return null;
	}

	@Override
	public Member login(Member m,Connection conn) throws SQLException {
		String sqlcode = "select *  from member where account = ? and password = ?";
		PreparedStatement state = conn.prepareStatement(sqlcode);
		state.setString(1, m.getAccount());
		state.setString(1, m.getPassword());
		ResultSet rs = state.executeQuery();
		Member memberData = new Member();
		while (rs.next()) {
			m.setMember_id(rs.getInt("member_id"));
			m.setAccount(rs.getString("account"));
			m.setPassword(rs.getString("password"));
			m.setUsername(rs.getString("username"));
			m.setIdnumber(rs.getString("idnumber"));
			m.setSex(rs.getString("sex"));
			m.setBirth(rs.getString("birth"));
			m.setRegisteredtime(rs.getString("registeredtime"));
			
		}
		rs.close();
		state.close();
		return memberData;
	}


}
